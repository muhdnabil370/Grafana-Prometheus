# version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: memo_system
      MYSQL_USER: memo_user
      MYSQL_PASSWORD: memo_pass
    ports:
      - "0.0.0.0:3306:3306"  # Bind to all interfaces
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-db:/docker-entrypoint-initdb.d
      - ./mysql-config:/etc/mysql/conf.d  # Add custom config
    networks:
      - memo_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # MySQL Exporter for Prometheus
  mysql_exporter:
    image: prom/mysqld-exporter:latest
    container_name: mysql_exporter
    # environment:
    #   - DATA_SOURCE_NAME=memo_user:memo_pass@tcp(mysql:3306)/
    volumes:
      - ./mysql_exporter/.my.cnf:/etc/mysql/my.cnf:ro
    command:
      - "--config.my-cnf=/etc/mysql/my.cnf"
    ports:
      - "9104:9104"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - memo_network

  # Simple Node.js Application (for demo)
  memo_app:
    build: ./app
    container_name: memo_app
    environment:
      DB_HOST: mysql
      DB_USER: memo_user
      DB_PASSWORD: memo_pass
      DB_NAME: memo_system
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - memo_network
    volumes:
      - ./app:/usr/src/app
      - /usr/src/app/node_modules

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - memo_network
    depends_on:
      mysql_exporter:
        condition: service_started

  # Grafana
  grafana:
      image: grafana/grafana:latest
      container_name: grafana
      ports:
        - "3001:3000"
      environment:
        GF_SECURITY_ADMIN_PASSWORD: admin123
        GF_SECURITY_ALLOW_EMBEDDING: "true"
        GF_AUTH_ANONYMOUS_ENABLED: "true"
        GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
        GF_USERS_VIEWERS_CAN_EDIT: "true"
        GF_PANELS_DISABLE_SANITIZE_HTML: "true"
        GF_SECURITY_ALLOW_LOADING_UNSIGNED_PLUGINS: "grafana-pyroscope-app,grafana-exploretraces-app,grafana-metricsdrilldown-app"
        GF_PLUGINS_ENABLE_ALPHA: "false"
        GF_LOG_LEVEL: "warn"
      volumes:
        - grafana_data:/var/lib/grafana
        - ./grafana/provisioning:/etc/grafana/provisioning
        - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      networks:
        - memo_network
      depends_on:
        mysql:
          condition: service_healthy
      restart: unless-stopped
      healthcheck:
        test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
        interval: 30s
        timeout: 10s
        retries: 3

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    volumes:
      - '/:/host:ro'
    pid: host
    restart: unless-stopped
    networks:
      - memo_network

volumes:
  mysql_data:
  prometheus_data:
  grafana_data:

networks:
  memo_network:
    driver: bridge